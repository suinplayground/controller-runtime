// Code generated by controller-gen. DO NOT EDIT.

package v1

// CatSpecApplyConfiguration represents a declarative configuration of the CatSpec type for use
// with apply.
type CatSpecApplyConfiguration struct {
	Breed *string `json:"breed,omitempty"`
	Color *string `json:"color,omitempty"`
	Age   *int32  `json:"age,omitempty"`
}

// CatSpecApplyConfiguration constructs a declarative configuration of the CatSpec type for use with
// apply.
func CatSpec() *CatSpecApplyConfiguration {
	return &CatSpecApplyConfiguration{}
}

// WithBreed sets the Breed field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Breed field is set to the value of the last call.
func (b *CatSpecApplyConfiguration) WithBreed(value string) *CatSpecApplyConfiguration {
	b.Breed = &value
	return b
}

// WithColor sets the Color field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Color field is set to the value of the last call.
func (b *CatSpecApplyConfiguration) WithColor(value string) *CatSpecApplyConfiguration {
	b.Color = &value
	return b
}

// WithAge sets the Age field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Age field is set to the value of the last call.
func (b *CatSpecApplyConfiguration) WithAge(value int32) *CatSpecApplyConfiguration {
	b.Age = &value
	return b
}
